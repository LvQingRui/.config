[manager]

prepend_keymap = [
	{ on = [ "l" ],         run = "plugin smart-enter",         desc = "Enter the child directory, or open the file" },
  { on = [ ";" ],         run = 'shell "$SHELL" --block --confirm'},
  {  on = ["T"],          run = 'plugin max-preview',         desc = "Maximize or restore preview"}
]


keymap = [

  { on = [ "<Esc>" ], run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = [ "q" ],     run = "quit",               desc = "Exit the process" },
	{ on = [ "Q" ],     run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file" },
	{ on = [ "q" ], run = "close",              desc = "Close the current tab, or quit if it is last tab" },
	{ on = [ "<C-z>" ], run = "suspend",            desc = "Suspend the process" },
  
  # Navigation
	{ on = [ "i" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "k" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "I" ], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [ "K" ], run = "arrow 5",  desc = "Move cursor down 5 lines" },

  { on = [ "j" ], run = "leave", desc = "Go back to the parent directory" },
	{ on = [ "l" ], run = "enter", desc = "Enter the child directory" },

	{ on = [ "J" ], run = "back",    desc = "Go back to the previous directory" },
	{ on = [ "L" ], run = "forward", desc = "Go forward to the next directory" },

  { on = [ "<Up>" ],    run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ],  run = "arrow 1",  desc = "Move cursor down" },
	{ on = [ "<Left>" ],  run = "leave",    desc = "Go back to the parent directory" },
	{ on = [ "<Right>" ], run = "enter",    desc = "Enter the child directory" },

  { on = [ "g", "g" ], run = "arrow -99999999", desc = "Move cursor to the top" },
	{ on = [ "G" ],      run = "arrow 99999999",  desc = "Move cursor to the bottom" },

  # Selection
	{ on = [ "<Space>" ], run = [ "toggle", "arrow 1" ], desc = "Toggle the current selection state" },
	{ on = [ "v" ],       run = "visual_mode",                        desc = "Enter visual mode (selection mode)" },
	{ on = [ "V" ],       run = "visual_mode --unset",                desc = "Enter visual mode (unset mode)" },
	{ on = [ "<C-a>" ],   run = "toggle_all --state=on",            desc = "Select all files" },
	{ on = [ "<C-r>" ],   run = "toggle_all",            desc = "Inverse selection of all files" },

  # Operation

  { on = [ "y" ],         run = "yank",                       desc = "Copy the selected files" },
  { on = [ "Y" ],         run = "unyank",                     desc = "Cancel the yank status of files" },
  { on = [ "x" ],         run = "yank --cut",                 desc = "Cut the selected files" },
	{ on = [ "X" ],         run = "unyank",                     desc = "Cancel the yank status of files" },
  { on = [ "p" ],         run = "paste",                      desc = "Paste the files" },
	{ on = [ "P" ],         run = "paste --force",              desc = "Paste the files (overwrite if the destination exists)" },
  { on = [ "d", "d" ],         run = "remove",                     desc = "Move the files to the trash" },
	{ on = [ "D", "D" ],         run = "remove --permanently",       desc = "Permanently delete the files" },
  { on = [ "a" ],         run = "create",                     desc = "Create a file or directory (ends with / for directories)" },
  { on = [ "r" ],         run = "rename --cursor=before_ext", desc = "Rename a file or directory" },
  { on = [ ";" ],         run = "shell",                      desc = "Run a shell command" },
  { on = [ "." ],         run = "hidden toggle",              desc = "Toggle the visibility of hidden files" },

  # Plugins
  { on = [ "s" ],         run = "search fd",                  desc = "Search files by name using fd" },
	{ on = [ "S" ],         run = "search rg",                  desc = "Search files by content using ripgrep" },
  { on = [ "<C-s>" ],     run = "search none",                desc = "Cancel the ongoing search" },
  { on = [ "z" ],         run = "plugin zoxide",              desc = "Jump to a directory using zoxide" },
	{ on = [ "Z" ],         run = "plugin fzf",                 desc = "Jump to a directory, or reveal a file using fzf" },

  # Copy
	{ on = [ "c", "p" ], run = "copy path",             desc = "Copy the absolute path" },
	{ on = [ "c", "d" ], run = "copy dirname",          desc = "Copy the path of the parent directory" },
	{ on = [ "c", "f" ], run = "copy filename",         desc = "Copy the name of the file" },
	{ on = [ "c", "n" ], run = "copy name_without_ext", desc = "Copy the name of the file without the extension" },

  # Filter
	{ on = [ "f" ], run = "filter --smart", desc = "Filter the files" },

  # Find
	{ on = [ "/" ], run = "find --smart",            desc = "Find next file" },
	{ on = [ "n" ], run = "find_arrow",              desc = "Go to next found file" },
	{ on = [ "N" ], run = "find_arrow --previous",   desc = "Go to previous found file" },

  # Sorting
	{ on = [ ",", "m" ], run = "sort modified --dir-first",               desc = "Sort by modified time" },
	{ on = [ ",", "M" ], run = "sort modified --reverse --dir-first",     desc = "Sort by modified time (reverse)" },
	{ on = [ ",", "c" ], run = "sort created --dir-first",                desc = "Sort by created time" },
	{ on = [ ",", "C" ], run = "sort created --reverse --dir-first",      desc = "Sort by created time (reverse)" },
	{ on = [ ",", "e" ], run = "sort extension --dir-first",         	    desc = "Sort by extension" },
	{ on = [ ",", "E" ], run = "sort extension --reverse --dir-first",    desc = "Sort by extension (reverse)" },
	{ on = [ ",", "a" ], run = "sort alphabetical --dir-first",           desc = "Sort alphabetically" },
	{ on = [ ",", "A" ], run = "sort alphabetical --reverse --dir-first", desc = "Sort alphabetically (reverse)" },
	{ on = [ ",", "n" ], run = "sort natural --dir-first",                desc = "Sort naturally" },
	{ on = [ ",", "N" ], run = "sort natural --reverse --dir-first",      desc = "Sort naturally (reverse)" },
	{ on = [ ",", "s" ], run = "sort size --dir-first",                   desc = "Sort by size" },
	{ on = [ ",", "S" ], run = "sort size --reverse --dir-first",         desc = "Sort by size (reverse)" },

  # Tabs
	{ on = [ "t" ], run = "tab_create --current", desc = "Create a new tab using the current path" },

	{ on = [ "1" ], run = "tab_switch 0", desc = "Switch to the first tab" },
	{ on = [ "2" ], run = "tab_switch 1", desc = "Switch to the second tab" },
	{ on = [ "3" ], run = "tab_switch 2", desc = "Switch to the third tab" },
	{ on = [ "4" ], run = "tab_switch 3", desc = "Switch to the fourth tab" },
	{ on = [ "5" ], run = "tab_switch 4", desc = "Switch to the fifth tab" },
	{ on = [ "6" ], run = "tab_switch 5", desc = "Switch to the sixth tab" },
	{ on = [ "7" ], run = "tab_switch 6", desc = "Switch to the seventh tab" },
	{ on = [ "8" ], run = "tab_switch 7", desc = "Switch to the eighth tab" },
	{ on = [ "9" ], run = "tab_switch 8", desc = "Switch to the ninth tab" },

  { on = [ "[" ], run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
	{ on = [ "]" ], run = "tab_switch 1 --relative",  desc = "Switch to the next tab" },

	{ on = [ "{" ], run = "tab_swap -1", desc = "Swap the current tab with the previous tab" },
	{ on = [ "}" ], run = "tab_swap 1",  desc = "Swap the current tab with the next tab" },

  # Tasks
	{ on = [ "w" ], run = "tasks_show", desc = "Show the tasks manager" },

	# Goto
	{ on = [ "g", "h" ],       run = "cd ~",             desc = "Go to the home directory" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",     desc = "Go to the config directory" },
	{ on = [ "g", "d" ],       run = "cd ~/Downloads",   desc = "Go to the downloads directory" },
  { on = [ "g", "D" ],       run = "cd ~/Desktop",     desc = "Go to the Desktop directory" },

	# Help
	{ on = [ "~" ], run = "help", desc = "Open help" },
]

[tasks]

keymap = [
	{ on = [ "<Esc>" ], run = "close", desc = "Hide the task manager" },
	{ on = [ "q" ], run = "close", desc = "Hide the task manager" },

	{ on = [ "i" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "k" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Enter>" ], run = "inspect", desc = "Inspect the task" },
	{ on = [ "x" ],       run = "cancel",  desc = "Cancel the task" },

	{ on = [ "~" ], run = "help", desc = "Open help" }
]

[select]

keymap = [
	{ on = [ "<Esc>" ],   run = "close",          desc = "Cancel selection" },
	{ on = [ "<Enter>" ], run = "close --submit", desc = "Submit the selection" },

	{ on = [ "i" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "k" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "I" ], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [ "K" ], run = "arrow 5",  desc = "Move cursor down 5 lines" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "~" ], run = "help", desc = "Open help" }
]

[input]
keymap = [
  { on = [ "<C-q>" ],   run = "close",          desc = "Cancel input" },
	{ on = [ "<Enter>" ], run = "close --submit", desc = "Submit the input" },
	{ on = [ "<Esc>" ],   run = "escape",         desc = "Go back the normal mode, or cancel input" },

  # Mode
	{ on = [ "h" ], run = "insert",                              desc = "Enter insert mode" },
	{ on = [ "a" ], run = "insert --append",                     desc = "Enter append mode" },
	{ on = [ "H" ], run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = [ "A" ], run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = [ "v" ], run = "visual",                              desc = "Enter visual mode" },
	{ on = [ "V" ], run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

  # Character-wise movement
	{ on = [ "j" ],       run = "move -1", desc = "Move back a character" },
	{ on = [ "l" ],       run = "move 1",  desc = "Move forward a character" },
	{ on = [ "<Left>" ],  run = "move -1", desc = "Move back a character" },
	{ on = [ "<Right>" ], run = "move 1",  desc = "Move forward a character" },

  # Word-wise movement
	{ on = [ "b" ],     run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = [ "w" ],     run = "forward",               desc = "Move forward to the start of the next word" },
	{ on = [ "e" ],     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

  # Line-wise movement
	{ on = [ "J" ],      run = "move -999", desc = "Move to the BOL" },
	{ on = [ "L" ],      run = "move 999",  desc = "Move to the EOL" },
	{ on = [ "<Home>" ], run = "move -999", desc = "Move to the BOL" },
	{ on = [ "<End>" ],  run = "move 999",  desc = "Move to the EOL" },

  # Delete
	{ on = [ "<Backspace>" ], run = "backspace",	        desc = "Delete the character before the cursor" },
	{ on = [ "<Delete>" ],    run = "backspace --under", desc = "Delete the character under the cursor" },

  #Cut/Yank/Paste
	{ on = [ "d" ], run = "delete --cut",                              desc = "Cut the selected characters" },
	{ on = [ "D" ], run = [ "delete --cut", "move 999" ],              desc = "Cut until the EOL" },
	{ on = [ "c" ], run = "delete --cut --insert",                     desc = "Cut the selected characters, and enter insert mode" },
	{ on = [ "C" ], run = [ "delete --cut --insert", "move 999" ],     desc = "Cut until the EOL, and enter insert mode" },
	{ on = [ "x" ], run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut the current character" },
	{ on = [ "y" ], run = "yank",           desc = "Copy the selected characters" },
	{ on = [ "p" ], run = "paste",          desc = "Paste the copied characters after the cursor" },
	{ on = [ "P" ], run = "paste --before", desc = "Paste the copied characters before the cursor" },

  # Undo/Redo
	{ on = [ "u" ],     run = "undo", desc = "Undo the last operation" },
	{ on = [ "<C-r>" ], run = "redo", desc = "Redo the last operation" },

  # Help
	{ on = [ "~" ], run = "help", desc = "Open help" }
]
